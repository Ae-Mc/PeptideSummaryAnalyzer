!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Accession	Classes.py	/^class Accession:$/;"	c
ApplyBlackList	PeptideSummaryAnalyzer_8.py	/^def ApplyBlackList(peptideTables: Dict[str, Dict[str, List[str]]],$/;"	f
ApplyDefaultConf	PeptideSummaryAnalyzer_8.py	/^def ApplyDefaultConf(peptideTables: Dict[str, Dict[str, List[str]]]):$/;"	f
ApplyGroupFilter	PeptideSummaryAnalyzer_8.py	/^def ApplyGroupFilter(accessionsPerTable: Dict[str, Dict[str, Accession]],$/;"	f
ApplyParamsFilter	PeptideSummaryAnalyzer_8.py	/^def ApplyParamsFilter(unused: Comparable,$/;"	f
ApplyProteinReplacements	PeptideSummaryAnalyzer_8.py	/^def ApplyProteinReplacements(replacementsPerTable: Dict[str, Dict[str, str]],$/;"	f
ApplyWhiteList	PeptideSummaryAnalyzer_8.py	/^def ApplyWhiteList(peptideTables: Dict[str, Dict[str, List[str]]],$/;"	f
CalculateAccessionsNormRatios	PeptideSummaryAnalyzer_8.py	/^def CalculateAccessionsNormRatios($/;"	f
CalculateNormParamsForAccessions	PeptideSummaryAnalyzer_8.py	/^def CalculateNormParamsForAccessions(accessions: Dict[str, Accession],$/;"	f
Comparable	Classes.py	/^class Comparable:$/;"	c
CountAccessionLackInGroup	PeptideSummaryAnalyzer_8.py	/^def CountAccessionLackInGroup($/;"	f
CountGroupsWithAccession	PeptideSummaryAnalyzer_8.py	/^def CountGroupsWithAccession($/;"	f
CreateDirIfNotExist	PeptideSummaryAnalyzer_8.py	/^def CreateDirIfNotExist(directoryPath: str) -> None:$/;"	f
GenerateAccessionsBunchOverAllTables	PeptideSummaryAnalyzer_8.py	/^def GenerateAccessionsBunchOverAllTables($/;"	f
GenerateDescriptionFile	PeptideSummaryAnalyzer_8.py	/^def GenerateDescriptionFile(outputDirPath: str,$/;"	f
GenerateGroupsBunch	PeptideSummaryAnalyzer_8.py	/^def GenerateGroupsBunch($/;"	f
GenerateJointOutputFile	PeptideSummaryAnalyzer_8.py	/^def GenerateJointOutputFile($/;"	f
GenerateOutputFiles	PeptideSummaryAnalyzer_8.py	/^def GenerateOutputFiles($/;"	f
GenerateTableAccessionsBunch	PeptideSummaryAnalyzer_8.py	/^def GenerateTableAccessionsBunch(peptideTable: Dict[str, List[str]]):$/;"	f
GenerateTableFileByField	PeptideSummaryAnalyzer_8.py	/^def GenerateTableFileByField($/;"	f
GetAccessionsFromTable	PeptideSummaryAnalyzer_8.py	/^def GetAccessionsFromTable($/;"	f
GetAccessionsPerTable	PeptideSummaryAnalyzer_8.py	/^def GetAccessionsPerTable($/;"	f
GetAccessionsWithMaxUnusedFromProteinGroups	PeptideSummaryAnalyzer_8.py	/^def GetAccessionsWithMaxUnusedFromProteinGroups($/;"	f
GetComparable	Classes.py	/^    def GetComparable(self, paramString: str):$/;"	m	class:Comparable
GetComparableClass	Classes.py	/^    def GetComparableClass(paramString: str):$/;"	m	class:Comparable
GetFileLines	PeptideSummaryAnalyzer_8.py	/^def GetFileLines(filename: str) -> List[str]:$/;"	f
GetInput	PeptideSummaryAnalyzer_8.py	/^def GetInput() -> Input:$/;"	f
GetProteinGroupsFromFile	PeptideSummaryAnalyzer_8.py	/^def GetProteinGroupsFromFile(filename: str) -> List[List[Tuple[str, float]]]:$/;"	f
GetProteinGroupsFromFiles	PeptideSummaryAnalyzer_8.py	/^def GetProteinGroupsFromFiles($/;"	f
GetProteinSummaryReplacements	PeptideSummaryAnalyzer_8.py	/^def GetProteinSummaryReplacements(inputDir: str) -> Dict[str, Dict[str, str]]:$/;"	f
GetReplacementsForGroups	PeptideSummaryAnalyzer_8.py	/^def GetReplacementsForGroups($/;"	f
GetReplacementsPerTable	PeptideSummaryAnalyzer_8.py	/^def GetReplacementsPerTable($/;"	f
GetRepresentativeAccessionForGroup	PeptideSummaryAnalyzer_8.py	/^def GetRepresentativeAccessionForGroup($/;"	f
GetScPsigAndNormFilesSumm	PeptideSummaryAnalyzer_8.py	/^def GetScPsigAndNormFilesSumm($/;"	f
ID	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^class ID(dict):$/;"	c
ID	PeptideSummaryAnalyzer_7.1.py	/^class ID(dict):$/;"	c
ID	PeptideSummaryAnalyzer_7.py	/^class ID(dict):$/;"	c
INPUTPATH	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^INPUTPATH = "Input"$/;"	v
INPUTPATH	PeptideSummaryAnalyzer_7.1.py	/^INPUTPATH = "Input"$/;"	v
INPUTPATH	PeptideSummaryAnalyzer_7.py	/^INPUTPATH = "Input"$/;"	v
INPUTPATH	PeptideSummaryAnalyzer_8.py	/^INPUTPATH = "Input"$/;"	v
Input	Classes.py	/^class Input:$/;"	c
IsFloat	Classes.py	/^def IsFloat(value):$/;"	f
OUTPUTPATH	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^OUTPUTPATH = "Output\/"$/;"	v
OUTPUTPATH	PeptideSummaryAnalyzer_7.1.py	/^OUTPUTPATH = "Output\/"$/;"	v
OUTPUTPATH	PeptideSummaryAnalyzer_7.py	/^OUTPUTPATH = "Output\/"$/;"	v
ReadPeptideSummaries	PeptideSummaryAnalyzer_8.py	/^def ReadPeptideSummaries(inputDir: str) -> Dict:$/;"	f
ReadSeqDB	PeptideSummaryAnalyzer_8.py	/^def ReadSeqDB(seqDBFilename: str) -> Dict[str, Sequence]:$/;"	f
ReadTable	PeptideSummaryAnalyzer_8.py	/^def ReadTable(tableFilename: str, sep='\\t') -> Dict[str, List[str]]:$/;"	f
RemoveAccessionFromAllTables	PeptideSummaryAnalyzer_8.py	/^def RemoveAccessionFromAllTables($/;"	f
RemoveAccessionsFromTableByBlacklist	PeptideSummaryAnalyzer_8.py	/^def RemoveAccessionsFromTableByBlacklist(peptideTable: Dict[str, List[str]],$/;"	f
RemoveRow	PeptideSummaryAnalyzer_8.py	/^def RemoveRow(table: Dict[str, List[str]], rowNum: int) -> None:$/;"	f
Sequence	Classes.py	/^class Sequence:$/;"	c
TestConfDefaultCondition	PeptideSummaryAnalyzer_8.py	/^def TestConfDefaultCondition(confVal: int):$/;"	f
TestUnusedContribConfParams	PeptideSummaryAnalyzer_8.py	/^def TestUnusedContribConfParams(unused: Comparable,$/;"	f
__init__	Classes.py	/^    def __init__(self) -> None:$/;"	m	class:Sequence
__init__	Classes.py	/^    def __init__(self, name="", Unused=0, ScSumm=0, ScNorm=0,$/;"	m	class:Accession
__init__	Classes.py	/^    def __init__(self, op: str = "", unused: str = "") -> None:$/;"	m	class:Comparable
__init__	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^	def __init__(self):$/;"	m	class:ID
__init__	PeptideSummaryAnalyzer_7.1.py	/^    def __init__(self):$/;"	m	class:ID
__init__	PeptideSummaryAnalyzer_7.py	/^	def __init__(self):$/;"	m	class:ID
compare	Classes.py	/^    def compare(self, value, filename: str) -> bool:$/;"	m	class:Comparable
compare	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^	def compare(op, arg1, arg2):$/;"	f	function:getInfoFromFiles
compare	PeptideSummaryAnalyzer_7.1.py	/^    def compare(op, arg1, arg2):$/;"	f	function:getInfoFromFiles
compare	PeptideSummaryAnalyzer_7.py	/^	def compare(op, arg1, arg2):$/;"	f	function:getInfoFromFiles
conf	Classes.py	/^    def conf(self):$/;"	m	class:Input
conf	Classes.py	/^    def conf(self, val):$/;"	m	class:Input
diff	Output/diff.py	/^                diff = newFileContent.find('\\n') - origFileContent.find('\\n')$/;"	v
getInfoFromFiles	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^def getInfoFromFiles(idFileName, IDs, IDExclusionList, seqDB, db, rawOutput, confOp, conf, contribOp, contrib, unusedOp, unused):$/;"	f
getInfoFromFiles	PeptideSummaryAnalyzer_7.1.py	/^def getInfoFromFiles(idFileName, IDs, IDExclusionList, seqDB, db, rawOutput,$/;"	f
getInfoFromFiles	PeptideSummaryAnalyzer_7.py	/^def getInfoFromFiles(idFileName, IDs, IDExclusionList, seqDB, db, rawOutput, confOp, conf, contribOp, contrib, unusedOp, unused):$/;"	f
getOpData	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^	def getOpData(string):$/;"	f	function:inputParams
getOpData	PeptideSummaryAnalyzer_7.1.py	/^    def getOpData(string):$/;"	f	function:inputParams
getOpData	PeptideSummaryAnalyzer_7.py	/^	def getOpData(string):$/;"	f	function:inputParams
inputParams	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^def inputParams(idFileName, idExclusionFileName, dbFileName, input_unused, $/;"	f
inputParams	PeptideSummaryAnalyzer_7.1.py	/^def inputParams(idFileName, idExclusionFileName, dbFileName, input_unused,$/;"	f
inputParams	PeptideSummaryAnalyzer_7.py	/^def inputParams(idFileName, idExclusionFileName, dbFileName, input_unused,$/;"	f
isFloat	PeptideSummaryAnalyzer_7.1.py	/^def isFloat(string):$/;"	f
main	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^def main():$/;"	f
main	PeptideSummaryAnalyzer_7.1.py	/^def main():$/;"	f
main	PeptideSummaryAnalyzer_7.py	/^def main():$/;"	f
main	PeptideSummaryAnalyzer_8.py	/^def main():$/;"	f
newFileContent	Output/diff.py	/^                newFileContent = newFile.read()$/;"	v
origFileContent	Output/diff.py	/^                origFileContent = origFile.read()$/;"	v
outParams	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^outParams = ["Unused", "seq_length_summ", "counts", "Sc_summ", "Psignal_summ", "Sc_norm", "Psignal_norm", "SP_2", "seq_length"]$/;"	v
outParams	PeptideSummaryAnalyzer_7.1.py	/^outParams = ["Unused", "seq_length_summ", "counts", "Sc_summ", "Psignal_summ",$/;"	v
outParams	PeptideSummaryAnalyzer_7.py	/^outParams = ["Unused", "seq_length_summ", "counts", "Sc_summ", "Psignal_summ", "Sc_norm", "Psignal_norm", "SP_2", "seq_length"]$/;"	v
outputResultsToFiles	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^def outputResultsToFiles(rawOutput, trueOutput, seqDB, seqDescDB, shortFileNames):$/;"	f
outputResultsToFiles	PeptideSummaryAnalyzer_7.1.py	/^def outputResultsToFiles(rawOutput, trueOutput, seqDB,$/;"	f
outputResultsToFiles	PeptideSummaryAnalyzer_7.py	/^def outputResultsToFiles(rawOutput, trueOutput, seqDB, seqDescDB, shortFileNames):$/;"	f
params	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^params = ["Unused", "seq_length_summ", "counts", "Sc_summ", "Psignal_summ", "Sc_norm", "Psignal_norm", "SP_2"]$/;"	v
params	PeptideSummaryAnalyzer_7.1.py	/^params = ["Unused", "seq_length_summ", "counts", "Sc_summ", "Psignal_summ",$/;"	v
params	PeptideSummaryAnalyzer_7.py	/^params = ["Unused", "seq_length_summ", "counts", "Sc_summ", "Psignal_summ", "Sc_norm", "Psignal_norm", "SP_2"]$/;"	v
positions	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^positions = {$/;"	v
positions	PeptideSummaryAnalyzer_7.1.py	/^positions = {$/;"	v
positions	PeptideSummaryAnalyzer_7.py	/^positions = {$/;"	v
project_opened	.ropeproject/config.py	/^def project_opened(project):$/;"	f
rawOutputToTrueOutput	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^def rawOutputToTrueOutput(IDs, seqDB, rawOutput, shortFileNames, maxGroupAbsence, minGroupsWithId):$/;"	f
rawOutputToTrueOutput	PeptideSummaryAnalyzer_7.1.py	/^def rawOutputToTrueOutput(IDs, seqDB, rawOutput, shortFileNames,$/;"	f
rawOutputToTrueOutput	PeptideSummaryAnalyzer_7.py	/^def rawOutputToTrueOutput(IDs, seqDB, rawOutput, shortFileNames, maxGroupAbsence, minGroupsWithId):$/;"	f
readInputFiles	OldFolderOrder/PeptideSummaryAnalyzer_7.py	/^def readInputFiles():$/;"	f
readInputFiles	PeptideSummaryAnalyzer_7.1.py	/^def readInputFiles():$/;"	f
readInputFiles	PeptideSummaryAnalyzer_7.py	/^def readInputFiles():$/;"	f
seq	Classes.py	/^    def seq(self):$/;"	m	class:Sequence
seq	Classes.py	/^    def seq(self, seq: str):$/;"	m	class:Sequence
set_prefs	.ropeproject/config.py	/^def set_prefs(prefs):$/;"	f
val	Classes.py	/^    def val(self):$/;"	m	class:Comparable
val	Classes.py	/^    def val(self, value):$/;"	m	class:Comparable
